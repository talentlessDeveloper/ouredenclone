{"version":3,"file":"static/js/279.53491af3.chunk.js","mappings":"4JA2KA,UArKA,YAMI,IALFA,EAKC,EALDA,YACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,UAEA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAwCN,EAAAA,EAAAA,WAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,UACXC,GAAUD,EAAAA,EAAAA,UA4EhB,OA3DAE,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAWJ,OAVIN,IACFM,EAAYC,aAAY,WACtBd,GAAa,SAACe,GAAD,OAAQA,KACrBN,EAASO,QAAQC,OACjBf,GAAe,GACfE,GAAgB,GAChBE,GAAgB,KACf,MAGE,WACLY,cAAcL,MAEf,CAACN,KAEJK,EAAAA,EAAAA,YAAU,WACR,IAAIO,EAOJ,OANoB,IAAhBlB,IACFkB,EAAaC,YAAW,WACtBlB,GAAe,SAACa,GAAD,OAAQA,OACtB,OAGE,WACLM,aAAaF,MAEd,CAAClB,KAEJW,EAAAA,EAAAA,YAAU,WACR,IAAIU,EAQJ,OAPqB,IAAjBnB,IACFmB,EAAcF,YAAW,WACvBhB,GAAgB,SAACW,GAAD,OAAQA,KACxBJ,EAAQK,QAAQO,WAAa,MAC5B,OAGE,WACLF,aAAaC,MAEd,CAACnB,KAEJS,EAAAA,EAAAA,YAAU,WACR,IAAIY,EASJ,OARIzB,IAA8B,IAAjBM,IACfmB,EAAQJ,YAAW,WACjBpB,GAAa,SAACe,GAAD,OAAQA,KACrBT,GAAgB,SAACS,GAAD,OAAQA,KACxBJ,EAAQK,QAAQO,WAAa,MAC5B,OAGE,WACLF,aAAaG,MAEd,CAACzB,EAAWM,KAGb,oBAASoB,UAAU,8BAAnB,UACE,iBAAKA,UAAU,+BAAf,WACE,gBAAKA,UAAU,qBAAf,UACE,4CAGF,iBAAKA,UAAU,oBAAf,WACE,iBACEA,UACG1B,EAEG,0BADA,kCAHR,WAOE,kBAAO2B,IAAKjB,EAAUkB,UAAQ,EAA9B,UACE,mBAAQC,IAAK/B,EAAWgC,KAAK,iBAG/B,oBAAQJ,UAAU,gBAAgBK,QA7FvB,WACnB9B,GAAa,SAACe,GAAD,OAAQA,KACrBN,EAASO,QAAQC,OACjBf,GAAe,GACfE,GAAgB,GAChBE,GAAgB,GAChBE,GAAc,GAEd,IAAIuB,EAAQX,YAAW,kBAAMZ,GAAc,KAAO,KAElD,OAAO,WACLa,aAAaU,KAkFP,WACE,SAAC,MAAD,KACA,kDAIJ,iBAAKN,UAAU,sBAAf,WACE,iBAAKA,UAAU,+BAAf,WACE,SAAC,MAAD,KACA,gBAAKA,UAAU,cAAf,UACE,uBAGF,SAAC,MAAD,KACA,gBAAKA,UAAU,cAAf,UACE,uBAGF,SAAC,MAAD,QAGF,iBAAKA,UAAU,2BAA2BC,IAAKf,EAA/C,WACE,iBACEc,UAAWxB,EAAc,qBAAuB,cADlD,WAGE,8CACA,oKAMF,iBACEwB,UAAWtB,EAAe,qBAAuB,cADnD,WAGE,wBAAKV,KACL,uBAAIC,QAEN,iBACE+B,UAAWpB,EAAe,qBAAuB,cADnD,WAGE,wBAAKV,KACL,uBAAIC,QAGN,cAAGoC,KAAK,cAAcP,UAAU,MAAMQ,GAAG,aAAzC","sources":["edenFood/FoodDescription.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { MdReplay } from \"react-icons/md\";\r\n\r\nimport { VscCircleFilled } from \"react-icons/vsc\";\r\n\r\nfunction FoodDescription({\r\n  slideTitle2,\r\n  slideText2,\r\n  slideTitle3,\r\n  slideText3,\r\n  videoDesc,\r\n}) {\r\n  const [isPlaying, setIsPlaying] = useState(true);\r\n  const [activeSlide, setActiveSlide] = useState(false);\r\n  const [activeSlide2, setActiveSlide2] = useState(false);\r\n  const [activeSlide3, setActiveSlide3] = useState(false);\r\n  const [isInterval, setIsInterval] = useState(true);\r\n\r\n  const videoRef = useRef();\r\n  const textRef = useRef();\r\n\r\n  const handleReplay = () => {\r\n    setIsPlaying((s) => !s);\r\n    videoRef.current.play();\r\n    setActiveSlide(false);\r\n    setActiveSlide2(false);\r\n    setActiveSlide3(false);\r\n    setIsInterval(false);\r\n\r\n    let reset = setTimeout(() => setIsInterval(true), 40000);\r\n\r\n    return () => {\r\n      clearTimeout(reset);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let intervals;\r\n    if (isInterval) {\r\n      intervals = setInterval(() => {\r\n        setIsPlaying((s) => !s);\r\n        videoRef.current.play();\r\n        setActiveSlide(false);\r\n        setActiveSlide2(false);\r\n        setActiveSlide3(false);\r\n      }, 40000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervals);\r\n    };\r\n  }, [isInterval]);\r\n\r\n  useEffect(() => {\r\n    let firstTimer;\r\n    if (activeSlide === false) {\r\n      firstTimer = setTimeout(() => {\r\n        setActiveSlide((s) => !s);\r\n      }, 2500);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(firstTimer);\r\n    };\r\n  }, [activeSlide]);\r\n\r\n  useEffect(() => {\r\n    let secondTimer;\r\n    if (activeSlide2 === false) {\r\n      secondTimer = setTimeout(() => {\r\n        setActiveSlide2((s) => !s);\r\n        textRef.current.scrollLeft = 350;\r\n      }, 11000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(secondTimer);\r\n    };\r\n  }, [activeSlide2]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isPlaying && activeSlide3 === false) {\r\n      timer = setTimeout(() => {\r\n        setIsPlaying((s) => !s);\r\n        setActiveSlide3((s) => !s);\r\n        textRef.current.scrollLeft = 750;\r\n      }, 27000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [isPlaying, activeSlide3]);\r\n\r\n  return (\r\n    <section className=\"foodDescription description\">\r\n      <div className=\"description__content wrapper\">\r\n        <div className=\"description__title\">\r\n          <h3>How it works</h3>\r\n        </div>\r\n\r\n        <div className=\"description__body\">\r\n          <div\r\n            className={\r\n              !isPlaying\r\n                ? \"description__video-item visible\"\r\n                : \"description__video-item\"\r\n            }\r\n          >\r\n            <video ref={videoRef} autoPlay>\r\n              <source src={videoDesc} type=\"video/mp4\" />\r\n            </video>\r\n\r\n            <button className=\"replay-button\" onClick={handleReplay}>\r\n              <MdReplay />\r\n              <span>Replay Video</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"description__slider\">\r\n            <div className=\"description__slider-timeline\">\r\n              <VscCircleFilled />\r\n              <div className=\"dash dash-1\">\r\n                <span></span>\r\n              </div>\r\n\r\n              <VscCircleFilled />\r\n              <div className=\"dash dash-2\">\r\n                <span></span>\r\n              </div>\r\n\r\n              <VscCircleFilled />\r\n            </div>\r\n\r\n            <div className=\"description__slider-text\" ref={textRef}>\r\n              <div\r\n                className={activeSlide ? \"text text-1 active\" : \"text text-1\"}\r\n              >\r\n                <h5>Choose your plan</h5>\r\n                <p>\r\n                  Sign up on the Eden app. Choose a meal schedule that works for\r\n                  you; when you want it, how you want it. It takes less than 5\r\n                  minutes.\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={activeSlide2 ? \"text text-2 active\" : \"text text-2\"}\r\n              >\r\n                <h5>{slideTitle2}</h5>\r\n                <p>{slideText2}</p>\r\n              </div>\r\n              <div\r\n                className={activeSlide3 ? \"text text-3 active\" : \"text text-3\"}\r\n              >\r\n                <h5>{slideTitle3}</h5>\r\n                <p>{slideText3}</p>\r\n              </div>\r\n\r\n              <a href=\"#getStarted\" className=\"btn\" id=\"getStarted\">\r\n                Get App\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FoodDescription;\r\n"],"names":["slideTitle2","slideText2","slideTitle3","slideText3","videoDesc","useState","isPlaying","setIsPlaying","activeSlide","setActiveSlide","activeSlide2","setActiveSlide2","activeSlide3","setActiveSlide3","isInterval","setIsInterval","videoRef","useRef","textRef","useEffect","intervals","setInterval","s","current","play","clearInterval","firstTimer","setTimeout","clearTimeout","secondTimer","scrollLeft","timer","className","ref","autoPlay","src","type","onClick","reset","href","id"],"sourceRoot":""}